//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inclock.library.Autenticador {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ponto", Namespace="http://schemas.datacontract.org/2004/07/Classes.VO")]
    [System.SerializableAttribute()]
    public partial class Ponto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuncionarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int periodoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Funcionario {
            get {
                return this.FuncionarioField;
            }
            set {
                if ((object.ReferenceEquals(this.FuncionarioField, value) != true)) {
                    this.FuncionarioField = value;
                    this.RaisePropertyChanged("Funcionario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hora {
            get {
                return this.HoraField;
            }
            set {
                if ((object.ReferenceEquals(this.HoraField, value) != true)) {
                    this.HoraField = value;
                    this.RaisePropertyChanged("Hora");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logitude {
            get {
                return this.LogitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogitudeField, value) != true)) {
                    this.LogitudeField = value;
                    this.RaisePropertyChanged("Logitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int periodo {
            get {
                return this.periodoField;
            }
            set {
                if ((this.periodoField.Equals(value) != true)) {
                    this.periodoField = value;
                    this.RaisePropertyChanged("periodo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Autenticador.IAutenticador")]
    public interface IAutenticador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/Logar", ReplyAction="http://tempuri.org/IAutenticador/LogarResponse")]
        string Logar(string password, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/Logar", ReplyAction="http://tempuri.org/IAutenticador/LogarResponse")]
        System.Threading.Tasks.Task<string> LogarAsync(string password, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetLogin", ReplyAction="http://tempuri.org/IAutenticador/GetLoginResponse")]
        string GetLogin(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetLogin", ReplyAction="http://tempuri.org/IAutenticador/GetLoginResponse")]
        System.Threading.Tasks.Task<string> GetLoginAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetPassword", ReplyAction="http://tempuri.org/IAutenticador/GetPasswordResponse")]
        string GetPassword(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetPassword", ReplyAction="http://tempuri.org/IAutenticador/GetPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPasswordAsync(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointDateInterval", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointDateIntervalResponse")]
        string GetCheckPointDateInterval(string InitialDate, string FinalDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointDateInterval", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointDateIntervalResponse")]
        System.Threading.Tasks.Task<string> GetCheckPointDateIntervalAsync(string InitialDate, string FinalDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointByDate", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointByDateResponse")]
        string GetCheckPointByDate(string InitialDate, string FinalDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointByDate", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointByDateResponse")]
        System.Threading.Tasks.Task<string> GetCheckPointByDateAsync(string InitialDate, string FinalDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointById", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointByIdResponse")]
        string GetCheckPointById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetCheckPointById", ReplyAction="http://tempuri.org/IAutenticador/GetCheckPointByIdResponse")]
        System.Threading.Tasks.Task<string> GetCheckPointByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetUserById", ReplyAction="http://tempuri.org/IAutenticador/GetUserByIdResponse")]
        string GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetUserById", ReplyAction="http://tempuri.org/IAutenticador/GetUserByIdResponse")]
        System.Threading.Tasks.Task<string> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetListUsers", ReplyAction="http://tempuri.org/IAutenticador/GetListUsersResponse")]
        string GetListUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetListUsers", ReplyAction="http://tempuri.org/IAutenticador/GetListUsersResponse")]
        System.Threading.Tasks.Task<string> GetListUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/CheckPoint", ReplyAction="http://tempuri.org/IAutenticador/CheckPointResponse")]
        string CheckPoint(Inclock.library.Autenticador.Ponto ponto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/CheckPoint", ReplyAction="http://tempuri.org/IAutenticador/CheckPointResponse")]
        System.Threading.Tasks.Task<string> CheckPointAsync(Inclock.library.Autenticador.Ponto ponto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetExpediente", ReplyAction="http://tempuri.org/IAutenticador/GetExpedienteResponse")]
        string GetExpediente(int semana, int funcionario_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutenticador/GetExpediente", ReplyAction="http://tempuri.org/IAutenticador/GetExpedienteResponse")]
        System.Threading.Tasks.Task<string> GetExpedienteAsync(int semana, int funcionario_Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAutenticadorChannel : Inclock.library.Autenticador.IAutenticador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutenticadorClient : System.ServiceModel.ClientBase<Inclock.library.Autenticador.IAutenticador>, Inclock.library.Autenticador.IAutenticador {
        
        public AutenticadorClient() {
        }
        
        public AutenticadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AutenticadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutenticadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutenticadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Logar(string password, string login) {
            return base.Channel.Logar(password, login);
        }
        
        public System.Threading.Tasks.Task<string> LogarAsync(string password, string login) {
            return base.Channel.LogarAsync(password, login);
        }
        
        public string GetLogin(string Email) {
            return base.Channel.GetLogin(Email);
        }
        
        public System.Threading.Tasks.Task<string> GetLoginAsync(string Email) {
            return base.Channel.GetLoginAsync(Email);
        }
        
        public string GetPassword(string Login) {
            return base.Channel.GetPassword(Login);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordAsync(string Login) {
            return base.Channel.GetPasswordAsync(Login);
        }
        
        public string GetCheckPointDateInterval(string InitialDate, string FinalDate) {
            return base.Channel.GetCheckPointDateInterval(InitialDate, FinalDate);
        }
        
        public System.Threading.Tasks.Task<string> GetCheckPointDateIntervalAsync(string InitialDate, string FinalDate) {
            return base.Channel.GetCheckPointDateIntervalAsync(InitialDate, FinalDate);
        }
        
        public string GetCheckPointByDate(string InitialDate, string FinalDate) {
            return base.Channel.GetCheckPointByDate(InitialDate, FinalDate);
        }
        
        public System.Threading.Tasks.Task<string> GetCheckPointByDateAsync(string InitialDate, string FinalDate) {
            return base.Channel.GetCheckPointByDateAsync(InitialDate, FinalDate);
        }
        
        public string GetCheckPointById(int id) {
            return base.Channel.GetCheckPointById(id);
        }
        
        public System.Threading.Tasks.Task<string> GetCheckPointByIdAsync(int id) {
            return base.Channel.GetCheckPointByIdAsync(id);
        }
        
        public string GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<string> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public string GetListUsers() {
            return base.Channel.GetListUsers();
        }
        
        public System.Threading.Tasks.Task<string> GetListUsersAsync() {
            return base.Channel.GetListUsersAsync();
        }
        
        public string CheckPoint(Inclock.library.Autenticador.Ponto ponto) {
            return base.Channel.CheckPoint(ponto);
        }
        
        public System.Threading.Tasks.Task<string> CheckPointAsync(Inclock.library.Autenticador.Ponto ponto) {
            return base.Channel.CheckPointAsync(ponto);
        }
        
        public string GetExpediente(int semana, int funcionario_Id) {
            return base.Channel.GetExpediente(semana, funcionario_Id);
        }
        
        public System.Threading.Tasks.Task<string> GetExpedienteAsync(int semana, int funcionario_Id) {
            return base.Channel.GetExpedienteAsync(semana, funcionario_Id);
        }
    }
}
